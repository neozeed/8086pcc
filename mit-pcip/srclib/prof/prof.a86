|  Copyright 1984 by the Massachusetts Institute of Technology  
|  See permission and disclaimer notice in file "notice.h"  


| crock.a86 contains the necessary strangeness for the alarm functions et al.
| It has an interrupt handler and a slight interface to the real world
| (ie: the high level schtuff)
| 5/21/84 - modified for profiler
|				<John Romkey>

int_clock = 0x08*4	| address of secondary clock interrupt handler

	.globl	_prof_on	| crock initialization
	.globl	_prof_off	| crock cleanup
_prof_on:
	cli
	push	ds
	xor	ax,ax			| get interrupt vectors' data seg
	mov	ds,ax
	mov	bx,int_clock+2		| get interrupt's cs
	mov	cx,int_clock

	mov	int_clock,*prof		| initialize appropriate vector
	mov	int_clock+2,cs

	pop	ds
	mov	save_cs,bx
	mov	save_ip,cx

	sti
	ret

_prof_off:
	cli
	push	ds
	mov	bx,save_cs
	mov	cx,save_ip

	xor	ax,ax
	mov	ds,ax

	mov	int_clock+2,bx
	mov	int_clock,cx
	pop	ds
	sti
	ret

	.data
save_cs:
	.word	0
save_ip:
	.word	0

	.text
prof:
	push	ax
	push	ax
	push	bp
	mov	bp,sp

	push	ds
	push	ax
	push	bx
	push	cx

	mov	ax,cs
	add	ax,#_data_seg
	mov	ds,ax

	mov	bx,*8(bp)
	mov	ax,cs
	cmp	ax,bx
	jnz	in_dos

	cmp	bx,#0xf000
	jz	in_rom

	mov	bx,*6(bp)
	sub	bx,#0x100
	cmp	bx,#_etext-0x100
	ja	done_prof

	mov	cl,*3
	shr	bx,cl
	and	bx,*0xfffe
	mov	ax,__prof_array
	add	bx,ax
	inc	(bx)
	jmp	done_prof

in_rom:
	inc	__rom_count
	jmp	done_prof

in_dos:
	inc	__dos_count

done_prof:
	mov	ax,save_ip
	mov	*2(bp),ax
	mov	ax,save_cs
	mov	*4(bp),ax

	pop	cx
	pop	bx
	pop	ax
	pop	ds
	pop	bp
	reti
